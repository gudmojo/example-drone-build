pipeline:
  compile:
    image: golang
    commands:
      - date
      - bash compile.sh
      - date

  lint:
    image: golang
    commands:
      - date
      - bash lint.sh
      - date
    when:
      matrix:
        SHARD: 1

# FIXME: We don't want to build one container for each shard
#  build-and-push-container-to-ecr:
#    image: plugins/ecr
#    region: us-east-1
#    repo: <account_id>.dkr.ecr.us-east-1.amazonaws.com/bar
#    tags:
#      - latest
#      - 1.0.1
#      - 1.0
#    build_args:
#      - HTTP_PROXY=http://yourproxy.com

  system-test:
    image: golang
    commands:
      - date
      - bash system-test.sh ${SHARD}
      - date

  # FIXME: We don't want to load test if system tests in other shards failed.
  load-test:
    image: golang
    commands:
      - date
      - bash load-test.sh
      - date
    when:
      matrix:
        SHARD: 1

  # FIXME: We don't want to deploy if system tests in other shards failed.
  deploy-demo:
    image: golang
    commands:
      - date
      - bash deploy-demo.sh
      - date
    when:
      matrix:
        SHARD: 1

# FIXME: We don't want to send a message for each shard
#  slack:
#    image: plugins/slack
#    webhook: https://hooks.slack.com/services/...
#    channel: dev
#    template: |
#      {{ #success build.status }}
#        build {{ build.number }} succeeded. Good job.
#      {{ else }}
#        build {{ build.number }} failed. Fix me please.
#      {{ /success }}

services:
  database:
    image: mysql
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

matrix:
  include:
    - SHARD: 1
    - SHARD: 2
    - SHARD: 3
    - SHARD: 4
